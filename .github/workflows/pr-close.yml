---
name: delete preview on PR close

"on":
  pull_request_target:
    types: [closed]

jobs:
  delete_preview:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    env:
      PR_PATH: pr-${{ github.event.pull_request.number }}
      PREVIEW_REPO_URL: https://github.com/${{ github.repository }}/tree/gh-pages/pr-${{ github.event.pull_request.number }}/ # yamllint disable-line rule:line-length
    steps:
      - name: Delete preview (manual approach)
        run: |
          # Clone the gh-pages branch
          git clone --single-branch --branch gh-pages https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages-repo || {
            echo "gh-pages branch doesn't exist, nothing to delete"
            exit 0
          }

          # Remove the PR directory
          cd gh-pages-repo
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if [ -d "${{ env.PR_PATH }}" ]; then
            rm -rf ${{ env.PR_PATH }}
            git add .
            git commit -m "Delete preview for PR #${{ github.event.pull_request.number }}" || echo "No changes to commit"
            git push origin gh-pages
            echo "Preview deleted successfully"
          else
            echo "Preview directory ${{ env.PR_PATH }} not found"
          fi

      - name: Comment on PR
        uses: hasura/comment-progress@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.pull_request.number }}
          id: deploy-preview
          message: |
            ðŸª“ PR closed, deleted preview:
            ${{ env.PREVIEW_REPO_URL }}
